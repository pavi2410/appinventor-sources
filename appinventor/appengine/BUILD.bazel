load("@aspect_bazel_lib//lib:run_binary.bzl", "run_binary")
load("@aspect_bazel_lib//lib:copy_to_directory.bzl", "copy_to_directory")

java_library(
    name = "AiShared",
    srcs = glob(["src/com/google/appinventor/shared/**/*.java"]),
    deps = [
        "//appinventor/common:CommonUtils",
        "//appinventor/common:CommonVersion",
        "//appinventor/components:CommonConstants",
        "//appinventor/lib:WarLibs",
    ],
)

java_library(
    name = "AiServer",
    srcs = glob([
        "src/com/google/appinventor/server/**/*.java",
        "src/com/google/appinventor/server/**/*.properties",
    ]),
    deps = [
        ":AiShared",
        "//appinventor/common:CommonUtils",
        "//appinventor/common:CommonVersion",
        "//appinventor/components:CommonConstants",
        "//appinventor/lib:LocalJarsForGwtSdk",
        "//appinventor/lib:WarLibs",
    ],
)

java_library(
    name = "AiRebind",
    srcs = glob(["src/com/google/appinventor/rebind/**/*.java"]),
    deps = [
        "//appinventor/lib:LocalJarsForGwtSdk",
    ],
)

# use config_setting to toggle dev mode
java_binary(
    name = "YaClientApp",
    jvm_flags = [
        "-Xss2M",  # this stands for stack size; the jvm default is 1M
        "-Xms512M",  # this stands for minimum heap size; the jvm default is 64M
        "-Dfile.encoding=UTF-8",
    ],
    main_class = "com.google.gwt.dev.Compiler",
    resource_strip_prefix = "appinventor/appengine/src",
    resources = glob([
        "src/com/google/appinventor/client/**/*.java",
        "src/com/google/appinventor/client/**/*.ui.xml",
        "src/com/google/appinventor/shared/**/*.java",
        "src/com/google/appinventor/images/*.png",
        "src/com/google/appinventor/images/*.gif",
    ]) + [
        ":GeneratedFilesFromComponents",
        ":GenerateBlocklyTranslation",
        "src/com/google/appinventor/client/languages.json",
        "src/com/google/appinventor/client/utils/html5dnd.js",
        "src/com/google/appinventor/YaClient.gwt.xml",
        ":BlocklyCompile",
    ],
    runtime_deps = [
        ":AiRebind",
        "//appinventor/common:CommonUtils",
        "//appinventor/common:CommonVersion",
        "//appinventor/components:CommonConstants",
        "//appinventor/lib:LocalJarsForGwtSdk",
        "//appinventor/lib:LocalJarsForYaClientApp",
    ],
)

GENERATED_FILES_SRC = "$(GENDIR)/appinventor/components/_javac/AndroidRuntime/libAndroidRuntime_sources/"

genrule(
    name = "GeneratedFilesFromComponents",
    srcs = ["//appinventor/components:AndroidRuntime"],
    outs = [
        "src/com/google/appinventor/client/ComponentsTranslation.java",
        "src/com/google/appinventor/client/AutogeneratedOdeMessages.java",
        "src/com/google/appinventor/simple_components.json",
    ],
    cmd_bash = 'mkdir -p "$(RULEDIR)/src/" && cp "{}" "$(RULEDIR)/src/"'.format(
        GENERATED_FILES_SRC,
    ),
    cmd_bat = 'xcopy /Y /I /F /E "{}" "$(RULEDIR)\\src\\"'.format(
        GENERATED_FILES_SRC.replace("/", "\\"),
    ),
)

AI_BLOCKLY_MSG_DIR = "$(GENDIR)/../../../appinventor/blocklyeditor/src/msg/ai_blockly"

BLOCKLY_MSG_JSON_DIR = "$(GENDIR)/../../../appinventor/lib/blockly/msg/json"

BLOCKLY_TRANSLATION_DEST = "$(RULEDIR)/src/com/google/appinventor/client/editor/youngandroid/i18n"

run_binary(
    name = "GenerateBlocklyTranslation",
    outs = [
        "src/com/google/appinventor/client/editor/youngandroid/i18n/messages.json",
        "src/com/google/appinventor/client/editor/youngandroid/i18n/messages_ca.json",
        "src/com/google/appinventor/client/editor/youngandroid/i18n/messages_de.json",
        "src/com/google/appinventor/client/editor/youngandroid/i18n/messages_es.json",
        "src/com/google/appinventor/client/editor/youngandroid/i18n/messages_fr.json",
        "src/com/google/appinventor/client/editor/youngandroid/i18n/messages_he.json",
        "src/com/google/appinventor/client/editor/youngandroid/i18n/messages_hu.json",
        "src/com/google/appinventor/client/editor/youngandroid/i18n/messages_hy.json",
        "src/com/google/appinventor/client/editor/youngandroid/i18n/messages_it.json",
        "src/com/google/appinventor/client/editor/youngandroid/i18n/messages_ko.json",
        "src/com/google/appinventor/client/editor/youngandroid/i18n/messages_lt.json",
        "src/com/google/appinventor/client/editor/youngandroid/i18n/messages_nl.json",
        "src/com/google/appinventor/client/editor/youngandroid/i18n/messages_pl.json",
        "src/com/google/appinventor/client/editor/youngandroid/i18n/messages_pt.json",
        "src/com/google/appinventor/client/editor/youngandroid/i18n/messages_pt_BR.json",
        "src/com/google/appinventor/client/editor/youngandroid/i18n/messages_ru.json",
        "src/com/google/appinventor/client/editor/youngandroid/i18n/messages_sv.json",
        "src/com/google/appinventor/client/editor/youngandroid/i18n/messages_tr.json",
        "src/com/google/appinventor/client/editor/youngandroid/i18n/messages_zh_CN.json",
        "src/com/google/appinventor/client/editor/youngandroid/i18n/messages_zh_TW.json",
    ],
    args = [
        AI_BLOCKLY_MSG_DIR,
        BLOCKLY_MSG_JSON_DIR,
        BLOCKLY_TRANSLATION_DEST,
    ],
    tool = "//appinventor/blocklyeditor:BlocklyTranslationGenerator",
)

genrule(
    name = "BlocklyCompile",
    srcs = [
        "//appinventor/blocklyeditor:ploverConfig.js",
    ],
    outs = ["src/com/google/appinventor/client/editor/youngandroid/blockly.js"],
    cmd_bash = "$(location //appinventor/lib:Plovr) build $(location //appinventor/blocklyeditor:ploverConfig.js) > $@",
    cmd_bat = "$(location //appinventor/lib:Plovr) build $(location //appinventor/blocklyeditor:ploverConfig.js) > $@",
    tools = [
        "//appinventor/lib:Plovr",
    ],
)

run_binary(
    name = "BuildYaClientApp",
    args = [
        "-XdisableUpdateCheck",
        "-localWorkers",
        "4",
        #        "-optimize",
        #        "9",
        "-draftCompile",
        "-war",
        "$(GENDIR)/appinventor/appengine/war",
        #        "-extra",
        #        "$(GENDIR)/appinventor/appengine/extra",
        "-logLevel",
        "INFO",
        "com.google.appinventor.YaClient",
    ],
    out_dirs = [
        #        "extra",
        "war",
    ],
    tool = ":YaClientApp",
)

filegroup(
    name = "War",
    srcs = glob(["war/**"]),
)

genrule(
    name = "AuthKey",
    outs = [
        "authkey/meta",
        "authkey/1",
    ],
    cmd_bash = "&&".join([
        "{keyczar} create --purpose=crypt --location={output_dir}",
        "{keyczar} addkey --location={output_dir}",
        "{keyczar} promote --version=1 --location={output_dir}",
    ]).format(
        keyczar = "$(location //appinventor/lib:KeyczarTool)",
        output_dir = "$(RULEDIR)/authkey",
    ),
    cmd_bat = "&&".join([
        "{keyczar} create --purpose=crypt --location=\"{output_dir}\"",
        "{keyczar} addkey --location=\"{output_dir}\"",
        "{keyczar} promote --version=1 --location=\"{output_dir}\"",
    ]).format(
        keyczar = "$(location //appinventor/lib:KeyczarTool)",
        output_dir = "$(RULEDIR)/authkey",
    ),
    tools = [
        "//appinventor/lib:KeyczarTool",
    ],
)

genrule(
    name = "Keystore",
    outs = [
        "keystore/meta",
        "keystore/1",
    ],
    cmd_bash = "&&".join([
        "{keyczar} create --purpose=crypt --location=\"{output_dir}\"",
        "{keyczar} addkey --location=\"{output_dir}\"",
        "{keyczar} promote --version=1 --location=\"{output_dir}\"",
    ]).format(
        keyczar = "$(location //appinventor/lib:KeyczarTool)",
        output_dir = "$(RULEDIR)/keystore",
    ),
    cmd_bat = "&&".join([
        "{keyczar} create --purpose=crypt --location=\"{output_dir}\"",
        "{keyczar} addkey --location=\"{output_dir}\"",
        "{keyczar} promote --version=1 --location=\"{output_dir}\"",
    ]).format(
        keyczar = "$(location //appinventor/lib:KeyczarTool)",
        output_dir = "$(RULEDIR)/keystore",
    ),
    tools = [
        "//appinventor/lib:KeyczarTool",
    ],
)

copy_to_directory(
    name = "MakeWar",
    srcs = [
        ":AiServer",
        ":AiShared",
        ":AuthKey",
        ":BuildYaClientApp",
        ":Keystore",
        ":War",
        "//appinventor/blocklyeditor:media",
        "//appinventor/lib:WarLibs",
    ],
    replace_prefixes = {
        "appinventor/lib/**/": "war/WEB-INF/lib/",
        "libAiShared.jar": "war/WEB-INF/lib/libAiShared.jar",
        "libAiServer.jar": "war/WEB-INF/lib/libAiServer.jar",
        "appinventor/appengine/war/*": "war/",
        #        "appinventor/appengine/extra/*": "extra/",
        "authkey": "war/WEB-INF/authkey/",
        "keystore": "war/keystore/",
        #        "appinventor/blocklyeditor/media/*.css": "war/static/css/",
        #        "appinventor/blocklyeditor/media/*.[!css]": "war/static/media/",
    },
)
